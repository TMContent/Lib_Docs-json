{
  "id": "d5b19213-d399-4c31-a91f-231775749619",
  "checksum": "1c24ae069c22ad7d3cc3508461e59da40c73e4f2",
  "words": {
    "this": [
      "p"
    ],
    "script": [
      "p"
    ],
    "was": [
      "p"
    ],
    "used": [
      "p"
    ],
    "to": [
      "p"
    ],
    "fix": [
      "p",
      "title"
    ],
    "a": [
      "p"
    ],
    "number": [
      "p"
    ],
    "of": [
      "p"
    ],
    "broken": [
      "p",
      "title"
    ],
    "links": [
      "p",
      "title"
    ],
    "that": [
      "p"
    ],
    "existed": [
      "p"
    ],
    "between": [
      "p"
    ],
    "articles": [
      "p"
    ],
    "caused": [
      "p"
    ],
    "by": [
      "p"
    ],
    "guid": [
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "remapping": [
      "p"
    ],
    "var": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "tmsite": [
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "\"http//localhost.:12121/\";\nvar": [
      "pre"
    ],
    "adminpwd=": [
      "pre"
    ],
    "\"..\";": [
      "pre"
    ],
    "toppanel": [
      "pre"
    ],
    "panelclear().add_panel();\nvar": [
      "pre"
    ],
    "tree1": [
      "pre"
    ],
    "toppaneladd_groupbox(\"ok\").add_treeview().sort().afterselect<string>((text)=>": [
      "pre"
    ],
    "textclipboardtext_set());\nvar": [
      "pre",
      "pre"
    ],
    "tree2": [
      "pre"
    ],
    "tree1insert_right().add_groupbox(\"not": [
      "pre"
    ],
    "ok\".add_treeview().sort().afterselect<string>((text)=>": [
      "pre"
    ],
    "teammentor": [
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre"
    ],
    "api_team": [
      "pre"
    ],
    "mentor_webservicestmsite);": [
      "pre"
    ],
    "teammentorlogin(\"admin\",": [
      "pre"
    ],
    "adminpwd;": [
      "pre"
    ],
    "//return": [
      "pre"
    ],
    "teammentorloggedin();\n//var": [
      "pre"
    ],
    "library": [
      "pre",
      "pre"
    ],
    "teammentorlibrary(\"java\");": [
      "pre"
    ],
    "oklist": [
      "pre"
    ],
    "liststring>();\nvar": [
      "pre"
    ],
    "notoklist": [
      "pre"
    ],
    "liststring>();\n\nvar": [
      "pre"
    ],
    "count": [
      "pre"
    ],
    "=1\nvar": [
      "pre"
    ],
    "linksfixed": [
      "pre"
    ],
    "0\nforeach(var": [
      "pre"
    ],
    "in": [
      "pre",
      "pre",
      "pre"
    ],
    "teammentorlibraries())\n{\n\tvar": [
      "pre"
    ],
    "tmarticles": [
      "pre"
    ],
    "librarytmwebservices.webservices.getguidanceitemsinlibrary(library.id);\n\t\n\t\n\tforeach(var": [
      "pre"
    ],
    "tmarticle": [
      "pre"
    ],
    "tmarticles\n\t{\n\t\t//\"{0}": [
      "pre"
    ],
    "{1}\"info(tmarticle.metadata.title,": [
      "pre"
    ],
    "tmarticlemetadata.id);\n\t\ttry\n\t\t{\n\t\t\tvar": [
      "pre"
    ],
    "htmlcode": [
      "pre"
    ],
    "tmarticlecontent.data.value;\n\t\t\tvar": [
      "pre"
    ],
    "htmldocument": [
      "pre"
    ],
    "htmlcodehtmldocument();\t\t\n\t\t\tvar": [
      "pre"
    ],
    "linkfixes": [
      "pre"
    ],
    "false\n\t\t\tforeach(var": [
      "pre"
    ],
    "link": [
      "pre"
    ],
    "htmldocumentlinks())": [
      "pre"
    ],
    "{\t\t\t\tvar": [
      "pre"
    ],
    "href": [
      "pre"
    ],
    "linkattribute(\"href\");\n\t\t\t\tif(href.notnull())": [
      "pre"
    ],
    "{\t\t\t\t\tvar": [
      "pre"
    ],
    "splittedhref": [
      "pre"
    ],
    "hrefvalue.split(\"/\");\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif": [
      "pre"
    ],
    "splittedhref.size()==3": [
      "pre"
    ],
    "&&": [
      "pre",
      "pre"
    ],
    "splittedhref1].contains(\"article\")": [
      "pre"
    ],
    "splittedhref2].isguid())\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar": [
      "pre"
    ],
    "splittedhref2].guid();": [
      "pre"
    ],
    "guidanceitem": [
      "pre"
    ],
    "librarytmwebservices.webservices.getguidanceitembyid(guid.str());\n\t\t\t\t\t\tif": [
      "pre"
    ],
    "guidanceitem.notnull())\n\t\t\t\t\t\t\toklist.add_if_not_there(href.value);": [
      "pre"
    ],
    "else\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar": [
      "pre"
    ],
    "mapping": [
      "pre"
    ],
    "linkinnertext.split(\":\").last().trim();": [
      "pre"
    ],
    "librarytmwebservices.webservices.getguidformapping(mapping);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif": [
      "pre"
    ],
    "==": [
      "pre"
    ],
    "guidempty)\t\t\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"no": [
      "pre"
    ],
    "ok": [
      "pre"
    ],
    "{0}": [
      "pre",
      "pre"
    ],
    "-": [
      "pre",
      "pre",
      "title"
    ],
    "{1}\"error(link.innertext,": [
      "pre"
    ],
    "mapping;\n\t\t\t\t\t\t\t\tnotoklist.add_if_not_there(href.value);": [
      "pre"
    ],
    "}\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"fixed:": [
      "pre"
    ],
    "{1}\"debug(guid": [
      "pre"
    ],
    "mapping;\n\t\t\t\t\t\t\t\thref.value": [
      "pre"
    ],
    "\"/article/{0}\"format(guid);\t\t\t\n\t\t\t\t\t\t\t\tlinkfixes": [
      "pre"
    ],
    "true\n\t\t\t\t\t\t\t\tlinksfixed++;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\t\n\t\t\tif": [
      "pre"
    ],
    "linkfixes)\n\t\t\t{\n\t\t\t\t\"saving:": [
      "pre"
    ],
    "{0}\"info(tmarticle.metadata.id);\n\t\t\t\t\n\t\t\t\ttmarticle.content.data.value": [
      "pre"
    ],
    "htmldocumenttidyhtml();\t\t\t\t\t\n\t\t\t\tlibrary.tmwebservices.webservices.updateguidanceitem(tmarticle);\t\t\t\t\n\t\t\t\tlinkfixes": [
      "pre"
    ],
    "false\n\t\t\t}\n\t\t\t\n\t\t\t//return": [
      "pre"
    ],
    "tmarticlecontent.data.value;\n\t\t}\n\t\tcatch(exception": [
      "pre"
    ],
    "ex\n\t\t{\n\t\t\t\"error:": [
      "pre"
    ],
    "{0}\"error(ex.message);\n\t\t}": [
      "pre"
    ],
    "if": [
      "pre"
    ],
    "count++.mod0(150))\n\t\t{\n\t\t\t\"[{0}/{1}]\".info(count,": [
      "pre"
    ],
    "tmarticlessize());\t\t\t\n\t\t}\t\t\n\t}\n\t\"oklist:": [
      "pre"
    ],
    "{0}\"info(oklist.size());\n\t\"notoklist:": [
      "pre"
    ],
    "{0}\"info(notoklist.size());\n}\ntree1.add_nodes(oklist);\ntree2.add_nodes(notoklist);\n\n\nreturn": [
      "pre"
    ],
    "\"links": [
      "pre"
    ],
    "fixed": [
      "pre"
    ],
    "{0}\"info(linksfixed);\n//return": [
      "pre"
    ],
    "libraryarticles();\n\n\n//using": [
      "pre"
    ],
    "securityinnovationteam": [
      "pre"
    ],
    "mentor\n//o2file:htmlagilitypack_extensionmethods.cs\n//o2file:...\\team": [
      "pre"
    ],
    "mentor-unittests\\apis\\api_team": [
      "pre"
    ],
    "mentor_webservicescs\n//o2ref:system.web.services.dll\n//o2ref:o2_misc_microsoft_mpl_libs.dll\n//o2tag_dontaddextrao2files": [
      "pre"
    ],
    "case": [
      "title"
    ],
    "study": [
      "title"
    ],
    "intra-article": [
      "title"
    ]
  },
  "tags": {
    "p": [
      "This script was used to fix a number of broken links that existed between articles (caused by GUID remapping)"
    ],
    "pre": [
      "var tmSite = \"http://localhost.:12121/\";\nvar adminPwd= \"...\"; \n  \nvar topPanel = panel.clear().add_Panel();\nvar tree1 = topPanel.add_GroupBox(\"OK\").add_TreeView().sort().afterSelect<string>((text)=> text.clipboardText_Set());\nvar tree2 = tree1.insert_Right().add_GroupBox(\"NOT OK\").add_TreeView().sort().afterSelect<string>((text)=> text.clipboardText_Set());\nvar teamMentor = new API_TEAM Mentor_WebServices(tmSite);  \nteamMentor.login(\"admin\", adminPwd); \n\n//return teamMentor.loggedIn();\n//var library = teamMentor.library(\"Java\"); \nvar okList = new List<string>();\nvar notokList = new List<string>();\n\nvar count =1;\nvar linksFixed = 0;\nforeach(var library in teamMentor.libraries())\n{\n\tvar tmArticles = library.tmWebServices.webServices.GetGuidanceItemsInLibrary(library.Id);\n\t\n\t\n\tforeach(var tmArticle in tmArticles)\n\t{\n\t\t//\"{0} : {1}\".info(tmArticle.Metadata.Title, tmArticle.Metadata.Id);\n\t\ttry\n\t\t{\n\t\t\tvar htmlCode = tmArticle.Content.Data.Value;\n\t\t\tvar htmlDocument = htmlCode.htmlDocument();\t\t\n\t\t\tvar linkFixes = false;\n\t\t\tforeach(var link in htmlDocument.links()) \n\t\t\t{\n\t\t\t\tvar href = link.attribute(\"href\");\n\t\t\t\tif(href.notNull())  \n\t\t\t\t{\n\t\t\t\t\tvar splittedHref = href.Value.split(\"/\");\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (splittedHref.size()==3 &&  splittedHref[1].contains(\"article\") && splittedHref[2].isGuid())\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar guid = splittedHref[2].guid(); \t\t\t\t\n\t\t\t\t\t\tvar guidanceItem = library.tmWebServices.webServices.GetGuidanceItemById(guid.str());\n\t\t\t\t\t\tif (guidanceItem.notNull())\n\t\t\t\t\t\t\tokList.add_If_Not_There(href.Value);\t  \n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar mapping = link.InnerText.split(\":\").last().trim(); \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tguid = library.tmWebServices.webServices.getGuidForMapping(mapping);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (guid == Guid.Empty)\t\t\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"no ok : {0}  -  {1}\".error(link.InnerText, mapping);\n\t\t\t\t\t\t\t\tnotokList.add_If_Not_There(href.Value);\t  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"fixed: {0} -> {1}\".debug(guid , mapping);\n\t\t\t\t\t\t\t\thref.Value =  \"/article/{0}\".format(guid);\t\t\t\n\t\t\t\t\t\t\t\tlinkFixes = true;\n\t\t\t\t\t\t\t\tlinksFixed++;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\t\n\t\t\tif (linkFixes)\n\t\t\t{\n\t\t\t\t\"Saving: {0}\".info(tmArticle.Metadata.Id);\n\t\t\t\t\n\t\t\t\ttmArticle.Content.Data.Value = htmlDocument.tidyHtml();\t\t\t\t\t\n\t\t\t\tlibrary.tmWebServices.webServices.UpdateGuidanceItem(tmArticle);\t\t\t\t\n\t\t\t\tlinkFixes = false;\n\t\t\t}\n\t\t\t\n\t\t\t//return tmArticle.Content.Data.Value;\n\t\t}\n\t\tcatch(Exception ex)\n\t\t{\n\t\t\t\"error: {0}\".error(ex.Message);\n\t\t} \n\t\tif (count++.mod0(150))\n\t\t{\n\t\t\t\"[{0}/{1}]\".info(count, tmArticles.size());\t\t\t\n\t\t}\t\t\n\t}\n\t\"okList: {0}\".info(okList.size());\n\t\"notokList: {0}\".info(notokList.size());\n}\ntree1.add_Nodes(okList);\ntree2.add_Nodes(notokList);\n\n\nreturn \"links fixed: {0}\".info(linksFixed);\n//return library.articles();\n\n\n//using SecurityInnovation.TEAM Mentor;\n//O2File:HtmlAgilityPack_ExtensionMethods.cs\n//O2File:...\\TEAM Mentor-UnitTests\\APIs\\API_TEAM Mentor_WebServices.cs\n//O2Ref:System.Web.Services.dll\n//O2Ref:O2_Misc_Microsoft_MPL_Libs.dll\n//O2Tag_DontAddExtraO2Files"
    ]
  },
  "links": [],
  "html": "<p>This script was used to fix a number of broken links that existed between articles (caused by GUID remapping)\n</p><pre>\n\nvar tmSite = \"http://localhost.:12121/\";\nvar adminPwd= \"...\"; \n  \nvar topPanel = panel.clear().add_Panel();\nvar tree1 = topPanel.add_GroupBox(\"OK\").add_TreeView().sort().afterSelect&lt;string&gt;((text)=&gt; text.clipboardText_Set());\nvar tree2 = tree1.insert_Right().add_GroupBox(\"NOT OK\").add_TreeView().sort().afterSelect&lt;string&gt;((text)=&gt; text.clipboardText_Set());\nvar teamMentor = new API_TEAM Mentor_WebServices(tmSite);  \nteamMentor.login(\"admin\", adminPwd); \n\n//return teamMentor.loggedIn();\n//var library = teamMentor.library(\"Java\"); \nvar okList = new List&lt;string&gt;();\nvar notokList = new List&lt;string&gt;();\n\nvar count =1;\nvar linksFixed = 0;\nforeach(var library in teamMentor.libraries())\n{\n\tvar tmArticles = library.tmWebServices.webServices.GetGuidanceItemsInLibrary(library.Id);\n\t\n\t\n\tforeach(var tmArticle in tmArticles)\n\t{\n\t\t//\"{0} : {1}\".info(tmArticle.Metadata.Title, tmArticle.Metadata.Id);\n\t\ttry\n\t\t{\n\t\t\tvar htmlCode = tmArticle.Content.Data.Value;\n\t\t\tvar htmlDocument = htmlCode.htmlDocument();\t\t\n\t\t\tvar linkFixes = false;\n\t\t\tforeach(var link in htmlDocument.links()) \n\t\t\t{\n\t\t\t\tvar href = link.attribute(\"href\");\n\t\t\t\tif(href.notNull())  \n\t\t\t\t{\n\t\t\t\t\tvar splittedHref = href.Value.split(\"/\");\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (splittedHref.size()==3 &amp;&amp;  splittedHref[1].contains(\"article\") &amp;&amp; splittedHref[2].isGuid())\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar guid = splittedHref[2].guid(); \t\t\t\t\n\t\t\t\t\t\tvar guidanceItem = library.tmWebServices.webServices.GetGuidanceItemById(guid.str());\n\t\t\t\t\t\tif (guidanceItem.notNull())\n\t\t\t\t\t\t\tokList.add_If_Not_There(href.Value);\t  \n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar mapping = link.InnerText.split(\":\").last().trim(); \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tguid = library.tmWebServices.webServices.getGuidForMapping(mapping);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (guid == Guid.Empty)\t\t\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"no ok : {0}  -  {1}\".error(link.InnerText, mapping);\n\t\t\t\t\t\t\t\tnotokList.add_If_Not_There(href.Value);\t  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"fixed: {0} -&gt; {1}\".debug(guid , mapping);\n\t\t\t\t\t\t\t\thref.Value =  \"/article/{0}\".format(guid);\t\t\t\n\t\t\t\t\t\t\t\tlinkFixes = true;\n\t\t\t\t\t\t\t\tlinksFixed++;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\t\n\t\t\tif (linkFixes)\n\t\t\t{\n\t\t\t\t\"Saving: {0}\".info(tmArticle.Metadata.Id);\n\t\t\t\t\n\t\t\t\ttmArticle.Content.Data.Value = htmlDocument.tidyHtml();\t\t\t\t\t\n\t\t\t\tlibrary.tmWebServices.webServices.UpdateGuidanceItem(tmArticle);\t\t\t\t\n\t\t\t\tlinkFixes = false;\n\t\t\t}\n\t\t\t\n\t\t\t//return tmArticle.Content.Data.Value;\n\t\t}\n\t\tcatch(Exception ex)\n\t\t{\n\t\t\t\"error: {0}\".error(ex.Message);\n\t\t} \n\t\tif (count++.mod0(150))\n\t\t{\n\t\t\t\"[{0}/{1}]\".info(count, tmArticles.size());\t\t\t\n\t\t}\t\t\n\t}\n\t\"okList: {0}\".info(okList.size());\n\t\"notokList: {0}\".info(notokList.size());\n}\ntree1.add_Nodes(okList);\ntree2.add_Nodes(notokList);\n\n\nreturn \"links fixed: {0}\".info(linksFixed);\n//return library.articles();\n\n\n//using SecurityInnovation.TEAM Mentor;\n//O2File:HtmlAgilityPack_ExtensionMethods.cs\n//O2File:...\\TEAM Mentor-UnitTests\\APIs\\API_TEAM Mentor_WebServices.cs\n//O2Ref:System.Web.Services.dll\n//O2Ref:O2_Misc_Microsoft_MPL_Libs.dll\n//O2Tag_DontAddExtraO2Files\n</pre>"
}