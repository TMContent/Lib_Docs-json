{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "d5b19213-d399-4c31-a91f-231775749619"
        ],
        "Library_Id": [
          "eb39d862-f752-4d1c-ab6e-14ed697397c0"
        ],
        "Title": [
          "Case Study - Fix Intra-Article Broken Links"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "This script was used to fix a number of broken links that existed between articles (caused by GUID remapping)\n\n{{{\n\nvar tmSite = \"http://localhost.:12121/\";\nvar adminPwd= \"...\"; \n  \nvar topPanel = panel.clear().add_Panel();\nvar tree1 = topPanel.add_GroupBox(\"OK\").add_TreeView().sort().afterSelect<string>((text)=> text.clipboardText_Set());\nvar tree2 = tree1.insert_Right().add_GroupBox(\"NOT OK\").add_TreeView().sort().afterSelect<string>((text)=> text.clipboardText_Set());\nvar teamMentor = new API_TEAM Mentor_WebServices(tmSite);  \nteamMentor.login(\"admin\", adminPwd); \n\n//return teamMentor.loggedIn();\n//var library = teamMentor.library(\"Java\"); \nvar okList = new List<string>();\nvar notokList = new List<string>();\n\nvar count =1;\nvar linksFixed = 0;\nforeach(var library in teamMentor.libraries())\n{\n\tvar tmArticles = library.tmWebServices.webServices.GetGuidanceItemsInLibrary(library.Id);\n\t\n\t\n\tforeach(var tmArticle in tmArticles)\n\t{\n\t\t//\"{0} : {1}\".info(tmArticle.Metadata.Title, tmArticle.Metadata.Id);\n\t\ttry\n\t\t{\n\t\t\tvar htmlCode = tmArticle.Content.Data.Value;\n\t\t\tvar htmlDocument = htmlCode.htmlDocument();\t\t\n\t\t\tvar linkFixes = false;\n\t\t\tforeach(var link in htmlDocument.links()) \n\t\t\t{\n\t\t\t\tvar href = link.attribute(\"href\");\n\t\t\t\tif(href.notNull())  \n\t\t\t\t{\n\t\t\t\t\tvar splittedHref = href.Value.split(\"/\");\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (splittedHref.size()==3 &&  splittedHref[1].contains(\"article\") && splittedHref[2].isGuid())\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar guid = splittedHref[2].guid(); \t\t\t\t\n\t\t\t\t\t\tvar guidanceItem = library.tmWebServices.webServices.GetGuidanceItemById(guid.str());\n\t\t\t\t\t\tif (guidanceItem.notNull())\n\t\t\t\t\t\t\tokList.add_If_Not_There(href.Value);\t  \n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar mapping = link.InnerText.split(\":\").last().trim(); \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tguid = library.tmWebServices.webServices.getGuidForMapping(mapping);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (guid == Guid.Empty)\t\t\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"no ok : {0}  -  {1}\".error(link.InnerText, mapping);\n\t\t\t\t\t\t\t\tnotokList.add_If_Not_There(href.Value);\t  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"fixed: {0} -> {1}\".debug(guid , mapping);\n\t\t\t\t\t\t\t\thref.Value =  \"/article/{0}\".format(guid);\t\t\t\n\t\t\t\t\t\t\t\tlinkFixes = true;\n\t\t\t\t\t\t\t\tlinksFixed++;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\t\n\t\t\tif (linkFixes)\n\t\t\t{\n\t\t\t\t\"Saving: {0}\".info(tmArticle.Metadata.Id);\n\t\t\t\t\n\t\t\t\ttmArticle.Content.Data.Value = htmlDocument.tidyHtml();\t\t\t\t\t\n\t\t\t\tlibrary.tmWebServices.webServices.UpdateGuidanceItem(tmArticle);\t\t\t\t\n\t\t\t\tlinkFixes = false;\n\t\t\t}\n\t\t\t\n\t\t\t//return tmArticle.Content.Data.Value;\n\t\t}\n\t\tcatch(Exception ex)\n\t\t{\n\t\t\t\"error: {0}\".error(ex.Message);\n\t\t} \n\t\tif (count++.mod0(150))\n\t\t{\n\t\t\t\"[{0}/{1}]\".info(count, tmArticles.size());\t\t\t\n\t\t}\t\t\n\t}\n\t\"okList: {0}\".info(okList.size());\n\t\"notokList: {0}\".info(notokList.size());\n}\ntree1.add_Nodes(okList);\ntree2.add_Nodes(notokList);\n\n\nreturn \"links fixed: {0}\".info(linksFixed);\n//return library.articles();\n\n\n//using SecurityInnovation.TEAM Mentor;\n//O2File:HtmlAgilityPack_ExtensionMethods.cs\n//O2File:...\\TEAM Mentor-UnitTests\\APIs\\API_TEAM Mentor_WebServices.cs\n//O2Ref:System.Web.Services.dll\n//O2Ref:O2_Misc_Microsoft_MPL_Libs.dll\n//O2Tag_DontAddExtraO2Files\n}}}\n"
        ]
      }
    ]
  }
}